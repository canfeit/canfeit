#nginx进程数,通常设置成和cpu核心数一致
worker_processes auto;
events {
    ##单个 worker process 最大链接数
    worker_connections  1024;
}
#声明要获取的环境变量
env SDC_URL_PORTAL;
http {
    #Nginx 根据请求文件扩展名返回 Content-Type，指定 MIME Type,浏览器使用 MIME Type识别资源类型
    include       mime.types;
    #没找到对应文件的扩展名，使用默认的Type
    default_type  application/octet-stream;
    #利用 linux zero copy 接口提升传输文件性能
    sendfile        on;
    #连接超时时间，秒
    keepalive_timeout  60;

    client_max_body_size 100m;
    client_body_buffer_size 1m;
    proxy_buffers 16 10m;
    proxy_buffer_size 10m;

    # limit_req_zone $binary_remote_addr zone=perIP:1m rate=30r/m; #每个ip一个session，binary_remote_addr 长度为4字节，比remote_addr省空间，分配1m的内存空间存储session，空间代号：perIP，限制每ip每2秒一个请求，超出返回503
    # limit_conn_zone $server_name zone=perServer:1m; #并发连接数限制

    # limit_req zone=perIP burst=50 nodelay; #每ip允许超出50个连接(每个ip并发连接数)，nodelay表示超出的连接也会被立即处理
    # limit_conn perServer 100; #每个服务器总并发连接数限制(所有在处理的请求)
    # limit_rate 500k; #每个连接带宽限制 bytes/s
    
    #开启gzip压缩
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 6;
    gzip_types text/xml text/plain text/css application/xml application/font-woff application/json application/xhtml+xml application/javascript image/jpeg image/gif image/png image/tiff image/x-icon image/svg+xml;
    #启用压缩的 http 版本,1.0以上
    gzip_http_version 1.0;
    #负载均衡服务器列表
    upstream incloud {
        #权值越高被分配到的机率越大
        server 127.0.0.1:91  weight=1;
    }
    server {
        #监听端口
        listen       80;
        # nginx 根据 server_name 匹配 HTTP 请求头的 host，去决定使用那个 server
        # 所有 server_name 都匹配不到就使用 default_server
        # 没有 default_server 使用第一个 server
        # 只有一个 server 的情况下不区分
        # 没有 server_name 就只能在一个端口建立一个 server
        # 支持正则表达式配置多站点
        server_name  localhost;
        proxy_connect_timeout 10;
        proxy_read_timeout 150;
        proxy_send_timeout 15;
        #lua获取环境变量
        set_by_lua $sdc_url 'return os.getenv("SDC_URL_PORTAL")';
        #路由
        location /doc {
            root   /Users/wajianhu/Documents/GitHub/pms; # pms 目录下的 doc 目录
            index index.html;
        }
        location /api {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #请求时间
            proxy_set_header Date $http_request_date;
            #lua脚本，生成代理地址
            access_by_lua 'ngx.var.sdc_url= string.gsub(ngx.var.request_uri, "/api", ngx.var.sdc_url)';
            #设置代理
            proxy_pass $sdc_url;
        }
        location /console {
            # proxy_method GET;
            proxy_pass http://incloud/console;
        }
        location / {
            #网站根目录
            root /root/public;
            #首页
            index index.html;
        }
    }
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
    #    ssl_certificate key/cert.pem;
    #    ssl_certificate_key key/cert.key;
    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;
    #    location /api {
    #       proxy_set_header Date $http_request_date;
    #       proxy_pass https://192.168.20.9/;
    #    }
    #    location / {
    #       proxy_pass http://localhost:8080/;
    #    }
    #}
}
