pid-file = /var/run/arangodb/coord.pid
supervisor = true

[database]
# auto-upgrade = true
# perform a database upgrade if necessary (default: false)
directory = /var/lib/arangodb3-coord
# path to the database directory (default: "")
force-sync-properties = false
# Turning off this option will speed up workloads that create and drop a lot of collections
throw-collection-not-loaded-error = true
# If set to false, the first thread that accesses a not-yet loaded collection will still load it. Other threads that try to access the collection while loading will not fail with error 1238 but instead block until the collection is fully loaded. This configuration might lead to all server threads being blocked because they are all waiting for the same collection to complete loading. Setting the option to true will prevent this from happening, but requires clients to catch error 1238 and react on it (maybe by scheduling a retry for later).
# maximal-journal-size = 
# default maximal journal size, can be overwritten when creating a collection (default: 33554432)
# revision-cache-chunk-size =
# chunk size (in bytes) for the document revisions cache (default: 4194304)
# revision-cache-target-size =
# total target size (in bytes) for the document revisions cache (default: 1073741824)
# replication-applier =
# If false the server will start with replication appliers turned off
# ignore-datafile-errors = false
# Ignore datafile errors when loading collections

[server]
endpoint = tcp://0.0.0.0:8529
# endpoint for client requests (e.g. 'http+tcp://127.0.0.1:8529', or 'vst+ssl://192.168.1.1:8529')
jwt-secret = secret
# secret to use when doing jwt authentication
authentication = true
statistics = false
# If this option is value is false, then ArangoDB's statistics gathering is turned off. Statistics gathering causes regular CPU activity so using this option to turn it off might relieve heavy-loaded instances a bit.
# authentication-unix-sockets = true
# authentication for requests via UNIX domain sockets
# descriptors-minimum = 0
# minimum number of file descriptors needed to start (default: 0)
# maximal-queue-size =
# Specifies the maximum size of the queue for asynchronous task execution. If the queue already contains size tasks, new tasks will be rejected until other tasks are popped from the queue. Setting this value may help preventing from running out of memory if the queue is filled up faster than the server can process requests. maximum queue length for asynchronous operations (default: 512)
# session-timeout = 
# timeout of web interface server sessions (in seconds) (default: 5184000)
# threads = 0
# number of server threads. use 0 to make arangod determine the number of threads automatically, based on available CPUs
# rest-server =
# start a rest-server

[tcp]
# backlog-size = 10
# Allows to specify the size of the backlog for the listen system call

[http]
keep-alive-timeout = 3
# s
# trusted-origin = 
# trusted origin URLs for CORS requests with credentials (default: )
# allow-method-override =
# When this option is set to true, the HTTP request method will optionally be fetched from one of the following HTTP request headers if present in the request.Setting this option to true may impose a security risk so it should only be used in controlled environments.

[ssl]
# cafile = 
# ca file used for secure connections (default: "")
# cipher-list = 
# ssl cipers to use, see OpenSSL documentation (default: "")
# ecdh-curve = prime256v1
# SSL ECDH Curve, see the output of "openssl ecparam -list_curves" (default: "prime256v1")
# keyfile = 
# key-file used for secure connections (default: "")
# protocol = 4
# ssl protocol (1 = SSLv2, 2 = SSLv23, 3 = SSLv3, 4 = TLSv1, 5 = TLSV1.2 (recommended) (default: 4)
# require-peer-certificate = false
# require a peer certificate when connections (default: false)
# session-cache = false
# enable the session cache for connections (default: false)
# options =
# This option can be used to set various SSL-related options. Individual option values must be combined using bitwise OR

[ldap]
# enabled = true
# tls =
# tls-version =
# tls-cert-check-strategy =
# tls-cacert-file =
# tls-cacert-dir =
# server =
# port =
# 389
# permissions-attribute-name =
# prefix =
# suffix =

# VelocyStream protocol
[vst]
# maxsize = 30720
# maximal size (in bytes) for a VelocyPack chunk (default: 30720)

# Write-Ahead Logging
[wal]
# directory =
# logfile directory (default: "")
# historic-logfiles = 
# maximum number of historic logfiles to keep after collection (default: 10)
# ignore-logfile-errors =
# ignore logfile errors. this will read recoverable data from corrupted logfiles but ignore any unrecoverable data (default: false)
# ignore-recovery-errors =
# continue recovery even if re-applying operations fails (default: false)
# logfile-size = 
# size of each logfile (in bytes) (default: 33554432)
# open-logfiles =
# maximum number of parallel open logfiles (default: 0)
# reserve-logfiles =
# maximum number of reserve logfiles to maintain (default: 3)
# sync-interval = 
# interval for automatic, non-requested disk syncs (in milliseconds) (default: 100)
allow-oversize-entries = false
# flush-timeout =
# ArangoDB will at most wait when flushing a full WAL logfile to disk. When the timeout is reached and the flush is not completed, the operation that requested the flush will fail with a lock timeout error.
# throttle-when-pending = 
# Throttle writes to WAL when at least such many operations are waiting for garbage collection
# throttle-wait =
# This option determines the maximum wait time (in milliseconds) for operations that are write-throttled.
slots = 16777216
# Maximum number of slots to be used in parallel

[javascript]
startup-directory = /usr/share/arangodb3/js
# path to the directory containing JavaScript startup scripts
app-path = /var/lib/arangodb3-apps
# directory for Foxx applications
# gc-frequency = 10
# JavaScript time-based garbage collection frequency (each x seconds) (default: 30)
# gc-interval = 100
# JavaScript request-based garbage collection interval (each x requests) (default: 1000)
# script = 
# run scripts and exit (default: )
# script-parameter = 
# script parameter
# v8-contexts = 0
# number of V8 contexts that are created for executing JavaScript actions (default: 0)
v8-options = --max_old_space_size=2048
# options to pass to v8
v8-max-heap = 2048
#  maximal heap size (in MB) (default: 3072)

[query]
# cache-entries = 
# maximum number of results in query result cache per database (default: 128) 条目
# cache-mode = on
# mode for the AQL query result cache (on, off, demand) (default: "off")
memory-limit = 0
# memory threshold for AQL queries (in bytes) (default: 0,meaning that there is no memory limit.)
# slow-threshold = 
# threshold for slow AQL queries (in seconds) (default: 10)
tracking = false
# whether to track slow AQL queries (default: true)

# RocksDB 是一个来自 facebook 的可嵌入式的支持持久化的 key-value 存储系统
[rocksdb]
# base-background-compactions = 4
# suggested number of concurrent background compaction jobs (default: 1)
# compaction-read-ahead-size = 1024
# if non-zero, we perform bigger reads when doing compaction. you should set this to at least 2MB.
# enabled = false
# Whether or not the RocksDB engine is enabled (default: true)
# max-background-compactions = 4
# maximum number of concurrent background compaction jobs
# max-write-buffer-number = 4
# maximum number of write buffers that built up in memory (default: 2)
# min-write-buffer-number-to-merge = 2
# minimum number of write buffers that will be merged together before writing to storage (default: 1)
# num-levels = 4
# number of levels for the database (default: 4)
# optimize-filters-for-hits = true
# this flag specifies that the implementation should optimize the filters mainly for cases where keys are found rather than also optimize for keys missed. This would be used in cases where the application knows that there are very few misses or the performance in the case of misses is not important (default: true)
# verify-checksums-in-compation = false
# if true, compaction will verify checksum on every read that happens as part of compaction (default: true)
# write-buffer-size = 0
# amount of data to build up in memory before converting to a sorted on-disk file (0 = disabled) (default: 0)

[foxx]
# queues = false
# enable Foxx queues in the server
# queues-poll-interval = 
# interval (seconds) to use for polling jobs in Foxx queues

[log]
level = warning
output = file:///var/log/arangodb3/coord.log
force-direct = false
# If set to false, log messages are handed off to an extra logging thread, which asynchronously writes the log messages

[cluster]
my-role = COORDINATOR
agency-endpoint = tcp://arango.agency0:5000
agency-endpoint = tcp://arango.agency1:5000
agency-endpoint = tcp://arango.agency2:5000
